name: Release Binaries

on:
  push:
    tags:
      - '*'

jobs:
  build-for-release:
    name: Build Release Binaries
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Cross
        run: cargo install cross

      - name: Build for x86_64-unknown-linux-gnu
        run: cross build --release --target x86_64-unknown-linux-gnu

      - name: Build for aarch64-unknown-linux-gnu
        run: cross build --release --target aarch64-unknown-linux-gnu

      - name: Build for x86_64-pc-windows-gnu
        run: cross build --release --target x86_64-pc-windows-gnu

      - name: Upload Artifact for x86_64-unknown-linux-gnu
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-linux
          path: target/x86_64-unknown-linux-gnu/release/mmm

      - name: Upload Artifact for aarch64-unknown-linux-gnu
        uses: actions/upload-artifact@v3
        with:
          name: aarch64-linux
          path: target/aarch64-unknown-linux-gnu/release/mmm

      - name: Upload Artifact for x86_64-pc-windows-gnu
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-windows
          path: target/x86_64-pc-windows-gnu/release/mmm.exe

  create-release:
    name: Create Release
    needs: build-for-release
    runs-on: ubuntu-24.04

    steps:
      - name: Download Artifact for x86_64-linux
        uses: actions/download-artifact@v3
        with:
          name: x86_64-linux
          path: x86_64-linux

      - name: Download Artifact for aarch64-linux
        uses: actions/download-artifact@v3
        with:
          name: aarch64-linux
          path: aarch64-linux

      - name: Download Artifact for x86_64-windows
        uses: actions/download-artifact@v3
        with:
          name: x86_64-windows
          path: x86_64-windows

      - name: Change Linux Binary Permissions
        run: |
          chmod +x -v x86_64-linux/mmm aarch64-linux/mmm

      - name: Compress x86_64-linux Binary
        run: tar -czvf x86_64-linux/mmm.tar.gz -C x86_64-linux mmm

      - name: Compress aarch64-linux Binary
        run: tar -czvf aarch64-linux/mmm.tar.gz -C aarch64-linux mmm

      - name: Compress x86_64-windows Binary
        run: zip -j x86_64-windows/mmm.zip x86_64-windows/mmm.exe

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Extract the linux binaries with
            ```
            tar -xzvf mmm-linux-x86_64.tar.gz
            ```
            or
            ```
            tar -xzvf mmm-linux-aarch64.tar.gz
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload x86_64 Linux to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: x86_64-linux/mmm.tar.gz
          asset_name: mmm-linux-x86_64.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload aarch64 Linux Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: aarch64-linux/mmm.tar.gz
          asset_name: mmm-linux-aarch64.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: x86_64-windows/mmm.zip
          asset_name: mmm-windows-x86_64.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
